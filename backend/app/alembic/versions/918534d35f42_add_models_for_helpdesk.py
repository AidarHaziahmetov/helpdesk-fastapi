"""Add models for Helpdesk

Revision ID: 918534d35f42
Revises: 
Create Date: 2025-02-15 16:42:39.657139

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '918534d35f42'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appealstatus',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_final', sa.Boolean(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('department',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('standardpriority',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_staff', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('organization',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('telegram_chat_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('send_notifications_to_internal_chat', sa.Boolean(), nullable=False),
    sa.Column('call_internal_specialists', sa.Boolean(), nullable=False),
    sa.Column('custom_appeal_completion', sa.Boolean(), nullable=False),
    sa.Column('region_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('custom_appeal_completion_status_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['custom_appeal_completion_status_id'], ['appealstatus.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialist',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract',
    sa.Column('is_actual', sa.Boolean(), nullable=False),
    sa.Column('start_dt', sa.Date(), nullable=False),
    sa.Column('end_dt', sa.Date(), nullable=False),
    sa.Column('type_priorities', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('document', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizationproject',
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'project_id')
    )
    op.create_table('representative',
    sa.Column('surname', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('patronymic', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_shared', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('main_representative_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['main_representative_id'], ['representative.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialistorganization',
    sa.Column('specialist_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialist.id'], ),
    sa.PrimaryKeyConstraint('specialist_id', 'organization_id')
    )
    op.create_table('contractstandardpriority',
    sa.Column('contract_id', sa.Uuid(), nullable=False),
    sa.Column('priority_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], ),
    sa.ForeignKeyConstraint(['priority_id'], ['standardpriority.id'], ),
    sa.PrimaryKeyConstraint('contract_id', 'priority_id')
    )
    op.create_table('individualpriority',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('contract_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appeal',
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('surname', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('patronymic', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('work_position', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('solving', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('dt', sa.DateTime(), nullable=False),
    sa.Column('actual_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('region_id', sa.Uuid(), nullable=True),
    sa.Column('project_id', sa.Uuid(), nullable=True),
    sa.Column('status_id', sa.Uuid(), nullable=False),
    sa.Column('responsible_user_id', sa.Uuid(), nullable=True),
    sa.Column('standard_priority_id', sa.Uuid(), nullable=True),
    sa.Column('individual_priority_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['individual_priority_id'], ['individualpriority.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['standard_priority_id'], ['standardpriority.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['appealstatus.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appealfile',
    sa.Column('file', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('appeal_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['appeal_id'], ['appeal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appealstopinterval',
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('appeal_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['appeal_id'], ['appeal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('appeal_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['appeal_id'], ['appeal.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('gitlab_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('appeal_id', sa.Uuid(), nullable=True),
    sa.Column('responsible_user_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['appeal_id'], ['appeal.id'], ),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commentfile',
    sa.Column('file', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('comment_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commentfile')
    op.drop_table('task')
    op.drop_table('comment')
    op.drop_table('appealstopinterval')
    op.drop_table('appealfile')
    op.drop_table('appeal')
    op.drop_table('individualpriority')
    op.drop_table('contractstandardpriority')
    op.drop_table('specialistorganization')
    op.drop_table('representative')
    op.drop_table('organizationproject')
    op.drop_table('contract')
    op.drop_table('specialist')
    op.drop_table('organization')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('standardpriority')
    op.drop_table('region')
    op.drop_table('project')
    op.drop_table('department')
    op.drop_table('appealstatus')
    # ### end Alembic commands ###
